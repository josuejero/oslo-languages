diff --git a/node_modules/@uiw/react-markdown-preview/lib/index.js b/node_modules/@uiw/react-markdown-preview/lib/index.js
index 12345678..87654321 100644
--- a/node_modules/@uiw/react-markdown-preview/lib/index.js
+++ b/node_modules/@uiw/react-markdown-preview/lib/index.js
@@ -9,7 +9,9 @@ var rehypeRaw = require('rehype-raw');
 var remarkGfm = require('remark-gfm');
 var rehypeSlug = require('rehype-slug');
 var remarkToc = require('remark-toc');
-var rehypePrism = require('rehype-prism-plus');
+// Replace CommonJS require with dynamic import
+// var rehypePrism = require('rehype-prism-plus');
+var rehypePrism = null; // Will be set dynamically
 var remarkMath = require('remark-math');
 var rehypeKatex = require('rehype-katex');
 var remarkEmoji = require('remark-emoji');
@@ -124,11 +126,21 @@ function MarkdownPreview(props) {
     const remarkPlugins = mdProps.remarkPlugins || [remarkMath, remarkGfm];
     if (mdProps.showToc) remarkPlugins.push(remarkToc);
     let rehypePlugins = mdProps.rehypePlugins || [];
-    if (mdProps.rehypePrism !== false) {
-        rehypePlugins.push([rehypePrism, mdProps.rehypePrismOptions || {}]);
-    }
     rehypePlugins = [...rehypePlugins, rehypeKatex, rehypeRaw, rehypeSlug];
-    return (React.createElement(ReactMarkdown, Object.assign({}, mdProps, { remarkPlugins: remarkPlugins, rehypePlugins: rehypePlugins, transformLinkUri: mdProps.transformLinkUri || null })));
+    
+    // Use dynamic import for rehype-prism-plus
+    const [isPrismLoaded, setIsPrismLoaded] = React.useState(false);
+    
+    React.useEffect(() => {
+        if (mdProps.rehypePrism !== false && !rehypePrism) {
+            import('rehype-prism-plus').then(module => {
+                rehypePrism = module.default;
+                if (mdProps.rehypePrism !== false) {
+                    rehypePlugins.push([rehypePrism, mdProps.rehypePrismOptions || {}]);
+                }
+                setIsPrismLoaded(true);
+            });
+        }
+    }, []);
+    
+    return isPrismLoaded || mdProps.rehypePrism === false ? (
+        React.createElement(ReactMarkdown, Object.assign({}, mdProps, { 
+            remarkPlugins: remarkPlugins, 
+            rehypePlugins: rehypePlugins, 
+            transformLinkUri: mdProps.transformLinkUri || null 
+        }))
+    ) : null;
 }